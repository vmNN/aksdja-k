#include <iostream>
#include <unistd.h>
#include <string>
#define width 85
int main(){
    int arr[120] = {
        75, 95, 65, 17, 47, 2, 18, 35, 87, 10, 0, 04, 82, 47, 65, 19, 01, 23, 75, 03, 34, 88, 02,
        77, 73, 07, 63, 67, 99, 65, 04, 28, 06, 16, 70, 92, 41, 41, 26, 56, 83, 40, 80, 70, 33, 41,
        48, 72, 33, 47, 32, 37, 16, 94, 29, 53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14, 70, 11,
        33, 28, 77, 73, 17, 78, 39, 68, 17, 57, 91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29 ,48, 63, 66, 04, 68,
        89, 53, 67, 30, 73, 16, 69, 87, 40, 31, 04, 62, 98, 27, 23, 9, 70, 98, 73, 93, 38, 53, 60, 04, 23 };
    int SOA = (sizeof(arr) / sizeof(int));
    int tmp = 0;
    int tcount = 0;
    while (tmp < SOA){
        ++tcount;
        tmp += tcount;
    }
    if (SOA == tmp){
        int xcount = 0;
        int counter = 1;
        int temp = 0;
        int path[15];
        int base = 0;
        while (temp < SOA){
            int andet = temp;
            std::string str;
            path[xcount] = arr[base];
            if (base < SOA){
                if (arr[(base + counter)] > arr[(base + (counter + 1))])
                    base += counter;
                else
                    base += (counter + 1);
            }
            for (int i = temp; i < andet + counter; ++i){
                if ((int)(arr[i] / 10) == 0)
                    str += std::to_string(0);
                str += std::to_string(arr[i]);
                str += " ";
                ++temp;
            }
            for (int i = 0; i <= (int)(((width / 2) - str.size()) / 2); ++i)
                std::cout << " ";
            std::cout << str << std::endl;
            ++xcount;
            ++counter;
        }
        std::cout << std::endl;
        int result = 0;
        for (int i = 0; i < (sizeof(path) / sizeof(int)); ++i){
            std::cout << path[i] << " ";
            result += path[i];
        }
        std::cout << std::endl << "result = " << result << std::endl;
    }
    else
        std::cout << "Is missing " << tmp - SOA << " elements" << std::endl;
    return 0;
}
